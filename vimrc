" Mенеджер плагинов Vundle -------------------------------------------------------
" Для установки плагинов указанных в .vimrc используй :BundleInstall
" Для удаления плагина, удали или закоментируй в .vimrc и запусти :BundleClean
" :BundleList что бы посмотреть список установленных плагинов.
"---------------------------------------------------------------------------------
" Используй :Vex или :Sex для просмотра файловой системы и открытия нужных файлов
" Используй :set paste или :set nopaste для вставки без autoident и smartident
"---------------------------------------------------------------------------------
" Конвертировать файл из Linux utf-8 в MS Windows cp1251
" vim filename.txt :e ++enc=utf-8 :set fileencoding=cp1251 :set fileformat=dos :w
"---------------------------------------------------------------------------------
" q(плюс имя) — для начала, q для конца записи, @имя_макроса для исполнения
" :e ~/путь_к_файлу или :e! для перезагрузки файла с потерей изменений
" :bn следующий буфер
" :bp предыдущий
" :ls просмотреть открытые буферы
" :b имя_буфера переключиться на буфер, комбинируется с табом, пишем :b domain, жмём таб и нам подставляется открытый iis_domain.cpp
" :bd удалить текущий буфер (если этот буфер единственное окно то vim закроется) также применяется с buffer_name.
" :split — разделить, если указан файл то открыть его
" :vsplit — тоже только по вертикали
" :sb[uffer] — разделить и редактировать буффер. !!!если заново открыть файл (к примеру через :split) буфер сбрасывается вместе с историей отмен и положением курсора!!!
" :vert sb[N] — sb по умолчанию делит горисонтально vert форсирует разделять вертикально
" Ctrl-w стрелочки :) — переместиться на окно влево/вправо/вверх/вниз
" Ctrl-w w - переходит на следующее окно циклически
" Ctrl-w o — развернуть окно
" Ctrl-w c — закрыть
" Ctrl-w s — разделить окно по горизонтали
" Ctrl-w v — тоже, только по вертикали
" Ctrl-w ] — разделить и перейти на определение чего-то, что под курсором (нужен плагин)
" Ctrl-w f — разделить и в новом окне открыть файл путь к которому находится под курсором, удобно делать на инклюдах
" Ctrl-W H — сделает текущее окно самым левым.
" Ctrl-W J — сделает текущее окно самым нижним.
" Ctrl-W K — сделает текущее окно самым верхним.
" Ctrl-W L — сделает текущее окно самым правым.
" [N]- — На <N> строк вверх.
" [N]_ — Вниз на <N>-1 строк и на первый не пустой символ.
" [N]% — На <N> процентов от всего буфера.
" [N]G, :[N] — Переход на строку <N>
" * и # — перейти к следующему вхождению слова под курсором
" [I - найдет и покажет количество вхождений слова под курсором
" f[simb] — На первый найденный справа от курсора символ [simb].
" F[simb] — На первый найденный слева от курсора символ [simb].
" t[simb] — Перед первым найденный справа от курсора символ [simb].
" T[simb] — Перед первым найденным слева от курсора символом [simb].
" H — На первую строку экрана.
" M — На среднюю строку экрана.
" L — На последнюю строку экрана.
" w, Shift+Right — На слово вперед.
" W, Alt+Right — На слово вперед (от пробела до пробела).
" e — Вперед до конца слова.
" E — Вперед до конца слова (от пробела до пробела).
" b, Shift+Left — На слово назад.
" B, Alt+Left — На слово назад (от пробела до пробела).
" ( — На предложение назад (до точки).
" ) — На предложение вперед (до точки).
" { — На абзац назад (до пустой строки).
" } — На абзац вперед (до пустой строки).
" caw — change ambient word — изменить слово под курсором
" ci" — чтобы изменить значение, находящееся в кавычках
" ct' — change til ' — изменить до символа '
" di{ — удалить всё внутри фигурных скобок. Если нужно удалить блок вместе со скобочками — то da{.
" 5dd — удалить пять строк
" :5,10d — удалить с пятой по десятую
" daw - удаляет слово, даже когда курсор находится в середине этого слова
" ciw - удаляет слово под курсором и переходит в режим вставки
" s - вырезать текущий символ и оставить редактор в режиме вставки (аналогична xi)
" S - вырезать текущую строку и оставить редактор в режиме вставки (аналогична cc)
" 0 — перейти в начало($ — конец) строки
" Ins, i, a — Переход в режим вставки.
" I — перейти в режим ввода в начале строки
" A — перейти в режим ввода в конце строки
" o — перейти в режим ввода с новой строки под курсором
" O — перейти в режим ввода с новой строки над курсором
" r — Переход в режим замены.
" Чтобы вставить данные из глобального буфера обмена \"+p (по очереди клавиши ", +, p)
" Чтобы скопировать текст в глобальный буффер обмена необходимо выделить его и \"+y (по очереди нажимаем клавиши ", +, y).
" ct) — удалить все до ближайшей закрывающей скобкe.
" gv — вернутся на последний Визуальное выдиление
" I — вставить введённый текст во все строки, выделенные блоком, перед блоком (только для вертикального блока).
" v — посимвольное выделение (o — что бы перепрыгнуть на другую границу  выдиления)
" V (shift v) — построчное выделение
" ctrl-v — поблочное выделение
" * Подсвечиваем слово, выделяем блок с V и нажимаем :. Видим в командной строке :’<,’> и добавляем s//НовоеСлово/g
" (:’<,’> зона видимости для s//НовоеСлово/g вместо глобального %)
" Выделяем с V (не боле одной строки) и нажимаем * в итоге подсвечиваем вся выделенная часть а не одно слово
" Выделяем блоком —> c — вырезаем —> пишем новый текст —> esc -> новый текст встаёт на место блочного выделения
" Выделяем блоком —> I или A для вставки нового текста —> esc -> новый текст встаёт на место блочного выделения
" :g//t$ — находим (с помощью /, или *) и копируем строки с найденными словами в конец(в начало если вместо $, 0)  файла
" :g!//d — находим (с помощью /, или *) и удаляем все строки кроме включающих найденное
" :g//d — находим (с помощью /, или *) и удаляем строки в которых присутствует найденное 
" `` — к месту, с которого был сделан последний прыжок (прыгнуть назад)
" `. — к месту последней правки
" z- — прокрутить окно так, что строка с курсором будет почти в самом низу
" z. — прокрутить окно так, что строка с курсором будет почти в центре
" z Enter — прокрутить окно так, что строка с курсором будет вверху
" ctrl w — стереть слово слева (в режиме вставки)
" ctrl u — стереть всю строку слева (в режиме вставки)
" u – отмена последней команды
" U – отмена изменений во всей строки
" Ctrl+r – отмена отмены
" csw( — добавить скобки вокруг слова (плагин:vim-surround)
" cs'" — заменить ' на " (плагин:vim-surround)
" ds( — удалить скобки вокруг слова (плагин:vim-surround)
" Заменить каждое вхождение нескольких пустых строк на одну пустую строку :v/./,/./-j
" Убрать пустые строки (в визуальном режиме) :'<,'>g/^$/d
" Раздвинуть подряд идущие строки (обратное предыдущему действие, каждая строка станет параграфом) :'<,'>s/$/\r/g
"
"--- Vundle — менеджер плагинов -----------------------------------------------
set nocompatible " не совместимость с классическим vi
filetype off " обязательно!
set rtp+=~/.vim/bundle/vundle/
call vundle#rc()
" Позволяем Vundle управлять Vundle
Bundle 'gmarik/vundle'
Bundle 'altercation/vim-colors-solarized'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'
Bundle 'tednaleid/bufexplorer'
"Bundle 'vim-scripts/bufexplorer'
Bundle 'msanders/snipmate.vim'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-repeat'
Bundle 'vim-scripts/ctags.vim'
Bundle 'vim-scripts/cscope.vim'
Bundle 'vim-scripts/matchit.zip'
"Bundle 'porqz/KeyboardLayoutSwitcher'
"------------------------------------------------------------------------------
filetype plugin indent on " обязательно!
"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..
"------------------------------------------------------------------------------
syntax enable
set background=light
"colorscheme solarized
"set guioptions-=T
if has('gui_running')
    set guioptions-=T
	set guioptions-=T " убирает тулбар
	set guioptions-=r " убирает скролл с права
	set guioptions-=L " убирает скролл с лева
	colorscheme solarized
else
	set background=light
endif
let g:solarized_termcolors=256
"------------------------------------------------------------------------------
" Последовательность команд привязанная к определенным клавиатурным комбинациям
" nmap, vmap, imap описывают поведение комбинации клавишь в нормальном, визуальном и режиме вставки редактора.
"<cr> — ввод, i в конце команды, которая повешена на комбинацию клавиш, означает перейти в режим вставки.
nnoremap <silent>\pa :set paste<CR>
nnoremap <silent>\npa :set nopaste<CR>
nnoremap <silent>\rnu :set rnu<CR>
nnoremap <silent>\nu :set nu<CR>
nnoremap vsb :vert sb
nnoremap hsb :sb
nnoremap <silent>\nn :NERDTree<CR>
"------------------------------------------------------------------------------
" по звездочке не прыгать на следующее найденное, а просто подсветить
nnoremap * *N
" выключить подсветку: повесить на горячую клавишу Ctrl-F8
nnoremap § :nohlsearch<CR>
" в визуальном режиме по команде * подсвечивать выделение
vnoremap * y :execute ":let @/=@\""<CR> :execute "set hlsearch"<CR>
" по <M-1> Alt-1 редактировать текущее слово
nnoremap ± ciw
" по <M-5> Alt-5 изменять хвост текущего слова
nnoremap <C-§> cw
" Tab следующее окно
nnoremap <Tab> <C-W>w
" Shift-Tab предыдущее окно
nnoremap <S-Tab> <C-W>W
"------------------------------------------------------------------------------
set mouse=a " прокрутка/выделение мышкой в консольном редакторе Vim
"set gfn=Menlo:h12 " шрифт и его размер
set encoding=utf-8 " кодировка, в которой Vim хранит все данные
set fileencodings=utf8,koi8-r,cp1251 " возможные кодировки файлов и последовательность определения.
"Включаю/выключаю проверку просто через :set spell и :set nospell
"setlocal spell spelllang=ru_yo,en_us
set virtualedit=all " редактировать с любого места
set number " включает нумерацию строк
set lbr " Перенос целых слов
set ic " игнорировать регистр при поиске
"------------------------------------------------------------------------------
"syntax on " включяет подсветку синтаксиса
set list listchars=tab:▹·,trail:·,extends:»,precedes:«,nbsp:×
"tabstop (по умолчанию 8) — количество пробелов, которыми символ табуляции отображается в тексте. Оказывает влияние как на уже существующие табуляции, так и на новые. В случае изменения значения, «на лету» применяется к тексту.
set tabstop=4
"shiftwidth (8) — по умолчанию используется для регулирование ширины отступов в пробелах, добавляемых командами >> и <<. Если значение опции не равно tabstop, как и в случае с softtabstop, отступ может состоять как из символов табуляций так и из пробелов. При включении опции — smarttab, оказывает дополнительное влияние.
set shiftwidth=4
"smarttab (выключена) — в случае включения этой опции, нажатие Tab в начале строки (если быть точнее, до первого непробельного символа в строке) приведет к добавлению отступа, ширина которого соответствует shiftwidth (независимо от значений в tabstop и softtabstop). Нажатие на Backspace удалит отступ, а не только один символ, что очень полезно при включенной expandtab. Напомню: опция оказывает влияние только на отступы в начале строки, в остальных местах используются значения из tabstop и softtabstop.
set smarttab
"expandtab (выключена) — в режиме вставки заменяет символ табуляции на соответствующее количество пробелов. Так же влияет на отступы, добавляемые командами >> и <<.
set expandtab
"smartindent (выключена) — делает то же, что и autoindent плюс автоматически выставляет отступы в «нужных» местах. В частности, отступ ставится после строки, которая заканчивается символом {, перед строкой, которая заканчивается символом }, удаляется перед символом #, если он следует первым в строке и т.д. (подробнее help 'smartindent'). 
set smartindent
" * autoindent (выключена) — копирует отступы с текущей строки при добавлении новой.
" * softtabstop (0) — количество пробелов, которыми символ табуляции отображается при добавлении. Несмотря на то, что при нажатии на Tab вы получите ожидаемый результат (добавляется новый символ табуляции), фактически в отступе могут использоваться как табуляция так и пробелы. Например, при установленных tabstop равной 8 и softtabstop равной 4, троекратное нажатие Tab приведет к добавлению отступа шириной 12 пробелов, однако сформирован он будет из одного символа табуляции и 4 пробелов.
set showmatch "подсветка скобок
set incsearch "подсветка во время набора для поиска
set hlsearch "подсветка найденного поиском
"отключение подсветки поиска по ESC
"nnoremap <esc> :noh<return><esc> " из за глюков в консольном вим
"Установка символов для подсветки, таких как пробелы в конце строки
" Дополнительные меню ---------------------------------------------------------
set wildmenu
set wcm=<Tab>
menu Encoding.=koi8-r :e ++enc=koi8-r ++ff=unix<CR>
menu Encoding.=windows-1251 :e ++enc=cp1251 ++ff=dos<CR>
menu Encoding.=cp866 :e ++enc=cp866 ++ff=dos<CR>
menu Encoding.=utf-8 :e ++enc=utf8 <CR>
menu Encoding.=koi8-u :e ++enc=koi8-u ++ff=unix<CR>
"map <F8> :emenu Encoding.<TAB>
" Convert file encoding
"set wildmenu
"set wcm=<Tab>
menu Encoding.->cp1251 :set fenc=cp1251
menu Encoding.->koi8-r :set fenc=koi8-r
menu Encoding.->cp866 :set fenc=ibm866
menu Encoding.->utf-8 :set fenc=utf-8
"map <S-F8> :emenu SetEncoding.<TAB>
map <F8> :emenu Encoding.<TAB>
"--- Строка статуса -----------------------------------------------------------
set laststatus=2 "Всегда отображать статусную строку 
hi StatusLineBufferNumber guifg=fg guibg=bg gui=bold
" % — объавление переменной
" %n — номер буфера
" %#error#%m%* — отображение цветом error флаг состояния несохранённых изменений
" %#warningmsg#%r%* — отображение цветом warningmsg флаг состояния 'только для чтения'
" \  — 'Пробел' должен иметь пробел после обратного слэша
" %f — Имя файла загруженного в буфер
" %{&fileencoding} — Кодировка файла
" %{&ff} — тип конца строки
" %y — тип файла
" %= — разделение на левую и правую стороны
" %( и %) — начало и конец группы
" %v — Номер колонки (цыфра после %, перед переменной задаст размер занимаемого места)
" %l — Номер строки
" %L — Количество строк в буфере
" %P — Позиция текста, отображаемого в окне по отношению к началу файла в процентах
" %(номер цвета)*(переменная для которой устанавливаем цвет)%*
" Задаем номер, цвет и фон
hi User1 guifg=#666666 guibg=#E8E8E8
hi User2 guifg=#FEE084 guibg=#626262
hi User3 guifg=#4C4C4C guibg=#CCCCCC
hi User4 guifg=#FFAE00 guibg=#626262
hi User5 guifg=#FD9295 guibg=#626262
hi User6 guifg=#000000 guibg=#FFFFFF
hi User7 guifg=#870000 guibg=#FFFFFF
set statusline=%2*\ %2n\ %*%4*%m%*%5*%r%*%6*\ %f\ %*%1*\ (%{&fileencoding}/%{&ff})\ %y\ %*%3*%=%(%*%1*\ Co%*%7*\ %v\ %*%1*\ St%*%7*\ %l\ \|\ %L\ %*%2*\ %P\ %*%)
"match WarningMsg '\%>120v.\+' "Выделяет текс длиннее 120 символов.
set showcmd "Включение отображения незавершенных команд в статусной строке
set undofile "включить "вечную" отмену изменений
set undodir=~/.vim/undo/  "директория для файлов с историей изменений
"set sc " показ размера выделенного
set lbr " перенос по словам
 
